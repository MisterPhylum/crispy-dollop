{"version":3,"sources":["app/components/AlbumArt.jsx","app/components/Controls.jsx","app/components/Icons.jsx","app/components/ListedSong.jsx","app/components/MusicPlayer.jsx","app/initialize.js","app/playlist.js"],"names":["AlbumArt","image","album","artist","showDefault","setShowDefault","defaultImage","text","handleError","Controls","isPlaying","isShuffle","onPlayPauseClick","onPrevClick","onNextClick","onShuffleClick","isMobile","maxWidth","playerStyle","shuffleStyle","Next","props","Play","Pause","Prev","Shuffle","ListedSong","data","isCurrent","onSongClick","track","id","MusicPlayer","playlist","allSongs","currentIndex","setCurrentIndex","progress","setProgress","lastSong","setLastSong","setIsPlaying","isError","setIsError","setIsShuffle","availableShuffleChoice","setShuffleSongs","url","color","audioRef","Audio","intervalRef","duration","current","currentPercentage","progressBarLook","newSong","selectSongForShuffle","length","startTimer","clearInterval","setInterval","ended","nextSong","currentTime","onScrub","value","onScrubEnd","prevSong","handleSongClick","newIndex","filter","item","handleShuffleClick","randomIndex","Math","floor","random","play","pause","onerror","oncanplay","e","target","background","map","index","document","addEventListener","shuffleSetup","ReactDOM","render","querySelector"],"mappings":"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","file":"public/app.js","sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nconst AlbumArt = ({image, album, artist}) => {\n\n    const [showDefault, setShowDefault] = useState(false)\n    const defaultImage = '/images/unavailable.jpg';\n    const text = `Vinyl cover look for ${album} by ${artist}`;\n\n    const handleError = () => {\n        setShowDefault(true);\n    }\n\n    useEffect(() => {\n        setShowDefault(false);\n    },[artist])\n\n    return  <img\n        className=\"album-cover\"\n        src={ showDefault ? defaultImage : image }\n        alt={text}\n        onError={handleError}\n    />\n}\n\nexport default AlbumArt;\n","import React from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport { Play, Pause, Next, Prev, Shuffle } from \"./Icons\";\n\nconst Controls = ({\n\tisPlaying,\n\tisShuffle,\n\tonPlayPauseClick,\n\tonPrevClick,\n\tonNextClick,\n\tonShuffleClick\n}) => {\n\n\t// for narrow viewport, \n\tconst isMobile = useMediaQuery({ maxWidth: 414 })\n\tconst playerStyle = isShuffle ? { 'opacity': '0.2' } : { 'opacity': '1' };\n\tconst shuffleStyle = isShuffle ? { 'opacity': '1' } : { 'opacity': '0.2' };\n\n\treturn (\n\t\t<div className={isMobile ? \"controls-mobile\" : \"controls\"} >\n\t\t\t<div className={isMobile ? \"player-mobile\" : \"player\"} >\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"prev\"\n\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\tonClick={onPrevClick}\n\t\t\t\t\tstyle={playerStyle}\n\t\t\t\t>\n\t\t\t\t\t<Prev />\n\t\t\t\t</button>\n\t\t\t\t{isPlaying ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"pause\"\n\t\t\t\t\t\tonClick={() => onPlayPauseClick(false)}\n\t\t\t\t\t\taria-label=\"Pause\"\n\t\t\t\t\t\tstyle={playerStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Pause />\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"play\"\n\t\t\t\t\t\tonClick={() => onPlayPauseClick(true)}\n\t\t\t\t\t\taria-label=\"Play\"\n\t\t\t\t\t\tstyle={playerStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Play />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\n\t\t\t\t{isMobile && (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"shuffle\"\n\t\t\t\t\t\taria-label=\"Shuffle\"\n\t\t\t\t\t\tonClick={onShuffleClick}\n\t\t\t\t\t\tstyle={shuffleStyle}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Shuffle />\n\t\t\t\t\t</button>)}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"next\"\n\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\tonClick={onNextClick}\n\t\t\t\t\tstyle={playerStyle}\n\t\t\t\t>\n\t\t\t\t\t<Next />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{!isMobile && (<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"shuffle\"\n\t\t\t\taria-label=\"Shuffle\"\n\t\t\t\tonClick={onShuffleClick}\n\t\t\t\tstyle={shuffleStyle}\n\t\t\t>\n\t\t\t\t<Shuffle />\n\t\t\t</button>)}\n\t\t</div>\n\t)\n};\n\nexport default Controls;\n","import * as React from \"react\"\n\nexport const Next = (props) => {\n  return (\n    <svg\n      width={131}\n      height={147}\n      viewBox=\"0 0 131 147\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>{\"next\"}</title>\n      <g fillRule=\"evenodd\">\n        <path d=\"M117 73.5L0 147V0zM126 0h5v147h-5z\" />\n      </g>\n    </svg>\n  )\n}\n\nexport const Play = (props) => {\n  return (\n    <svg\n      width={190}\n      height={239}\n      viewBox=\"0 0 190 239\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>{\"play\"}</title>\n      <path\n        d=\"M189.714 119.714l-189.428 119v-238z\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n\nexport const Pause = (props) => {\n  return (\n    <svg\n      width={133}\n      height={238}\n      viewBox=\"0 0 133 238\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>{\"pause\"}</title>\n      <g fill=\"#D8D8D8\" fillRule=\"evenodd\">\n        <path d=\"M83 0h50v238H83zM0 0h50v238H0z\" />\n      </g>\n    </svg>\n  )\n}\n\nexport const Prev = (props) => {\n  return (\n    <svg\n      width={132}\n      height={147}\n      viewBox=\"0 0 132 147\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>{\"prev\"}</title>\n      <g  fillRule=\"evenodd\">\n        <path d=\"M0 0h5v147H0zM15 73.5L132 0v147z\" />\n      </g>\n    </svg>\n  )\n}\n\nexport const Shuffle = (props) => {\n  return (\n    <svg\n      width={256}\n      height={179}\n      viewBox=\"0 0 256 179\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <title>shuffle</title>\n      <g fillRule=\"evenodd\">\n        <path\n          d=\"M239.8 35.846c0 2.5-1.2 4.9-3.2 6.5l-28.6 23.3c-1.1.9-2.5 1.4-3.8 1.4-1.8 0-3.5-.8-4.7-2.2-2.1-2.6-1.7-6.4.9-8.4l17.8-14.4h-6.4c-29.2 0-56.9 11.4-74 30.5-1.2 1.3-2.8 2-4.5 2-1.4 0-2.8-.5-4-1.5-2.5-2.2-2.7-6-.5-8.5 19.3-21.6 50.3-34.5 82.9-34.5h6.4l-17.8-14.4c-2.6-2.1-3-5.8-.9-8.4 2.1-2.6 5.9-3 8.5-.9l28.6 23.2c2.1 1.5 3.3 3.8 3.3 6.3z\"\n          fillRule=\"nonzero\"\n        />\n        <path\n          d=\"M239.8 139.31c0 2.43-1.2 4.763-3.2 6.319L208 168.182c-1.1.875-2.4 1.264-3.8 1.264-1.8 0-3.5-.778-4.7-2.139-2.1-2.527-1.7-6.221.9-8.166l17.8-13.999h-6.4c-43.7 0-82.8-22.262-97.2-55.412C102 60.955 67.3 41.512 28.3 41.512H6.6c-3.3 0-6-2.625-6-5.833s2.7-5.833 6-5.833h21.7c43.8 0 82.8 22.262 97.3 55.412 12.6 28.873 47.2 48.219 86.2 48.219h6.4l-17.8-14c-2.6-2.04-3-5.735-.9-8.165 2.1-2.528 5.9-2.917 8.5-.875l28.6 22.554c2 1.652 3.2 3.985 3.2 6.319z\"\n          fillRule=\"nonzero\"\n        />\n        <path\n          d=\"M28.3 148.446H6.6c-3.3 0-6-2.7-6-6s2.7-6 6-6h21.7c29.2 0 56.9-11.4 74-30.5 2.2-2.5 6-2.7 8.5-.5s2.7 6 .5 8.5c-19.4 21.6-50.4 34.5-83 34.5z\"\n          fillRule=\"nonzero\"\n        />\n        <path d=\"M255.952 37.112l-59 37.064V.048zM255.952 141.112l-59 37.064v-74.128z\" />\n      </g>\n    </svg>\n  )\n} ","import React from \"react\";\nimport AlbumArt from './AlbumArt';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ListedSong = ({ data, isCurrent, onSongClick }) => {\n\tconst { artist, album, track, id } = data;\n  const image = '/images/'+id+'.jpg';\n\tconst isMobile = useMediaQuery({ maxWidth: 1024 })\n\n\treturn (\t\n\t\t<div \n\t\t\tclassName=\"track\"\n\t\t\tonClick={onSongClick}\n\t\t\tstyle={(isCurrent) ? { 'opacity': 1 } : { 'opacity': 0.4 }}\n\t\t>\n\t\t\t<p\n\t\t\t\tclassName=\"info\"\n\t\t\t>\t\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<span className=\"highlight-left\" />{track}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"artist\">\n\t\t\t\t\t{artist} - {album}\n\t\t\t\t\t<span className=\"highlight-right\" />\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t\t{isMobile && \t<AlbumArt\n\t\t\t\timage={image}\n\t\t\t\talbum={album}\n\t\t\t\tartist={artist}\n\t\t\t/>}\n\t\t</div>\n\t)\n}\n\nexport default ListedSong;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Controls from './Controls';\nimport ListedSong from './ListedSong';\nimport AlbumArt from './AlbumArt';\n\nconst MusicPlayer = ({ playlist, allSongs }) => {\n  // state\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [lastSong, setLastSong] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isShuffle, setIsShuffle] = useState(false);\n  const [availableShuffleChoice, setShuffleSongs] = useState(allSongs);\n\n  // selected song details\n  const { artist, album, url, id, color='rgba(255,255,255,0.3)'} = playlist[currentIndex];\n  const image = '/images/'+id+'.jpg';\n\n  // refs \n  const audioRef = useRef(new Audio(url));\n  const intervalRef = useRef();\n  const { duration } = audioRef.current;\n\n  const currentPercentage = duration\n    ? `${(progress / duration) * 100}%`\n    : \"0%\";\n  const progressBarLook = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, ${color}), color-stop(${currentPercentage}, rgba(255,255,255,0.3)\n  `;\n\n  const newSong = () => {\n    if (isShuffle) { \n      selectSongForShuffle(); \n    } else if (currentIndex < playlist.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setCurrentIndex(0);\n    }\n  };\n\n  const startTimer = () => {\n    // clear any timers already running\n    clearInterval(intervalRef.current);\n\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        nextSong();\n      } else {\n        setProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  \n  const onScrub = (value) => {\n    // clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setProgress(audioRef.current.currentTime);\n  };\n\n  const onScrubEnd = () => {\n    // if not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n\n  const prevSong = () => {\n    // this follow the requirements, but will cause a loop\n    setLastSong(currentIndex);\n    setCurrentIndex(lastSong);\n  };\n\n  const nextSong = () => {\n    setLastSong(currentIndex);\n    newSong();\n  };\n\n  const handleSongClick = (newIndex) => {\n    setIsPlaying(false);\n    setLastSong(currentIndex);\n    setCurrentIndex(newIndex);\n    // if in shuffle mode, remove the selected song index from the shuffle array\n    if (isShuffle) setShuffleSongs(availableShuffleChoice.filter(item => item !== currentIndex));\n    setIsPlaying(true);\n  }\n\n  const handleShuffleClick = () => {\n    setIsShuffle(!isShuffle)\n    // remove the currently playing song index from the shuffle array\n    if (isPlaying) setShuffleSongs(availableShuffleChoice.filter(item => item !== currentIndex));\n  }\n\n  const selectSongForShuffle = () => {\n    // choose a song from those that have not yet played      \n    const randomIndex = Math.floor(Math.random() * availableShuffleChoice.length);\n    setCurrentIndex(availableShuffleChoice[randomIndex]);\n  }\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n   // handle cleanup and setup when changing a song (represented by currentIndex)\n  useEffect(() => {\n    // remove the song that is about to play from possible shuffle choices\n    if (isShuffle) setShuffleSongs(availableShuffleChoice.filter(item => item !== currentIndex));\n    audioRef.current.pause();\n    audioRef.current = new Audio(url);\n\n    //  if error, skip to the next song, and do not store this one as the last song played\n    audioRef.current.onerror = () => {\n      newSong();\n    }\n\n    audioRef.current.oncanplay = () => {\n      setProgress(audioRef.current.currentTime);\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } \n\n  }, [currentIndex]);\n\n  // monitor the shuffle array to replenish it once empty (all songs have been played)\n  useEffect(() => {\n    if (availableShuffleChoice.length === 0) {\n      setShuffleSongs(allSongs);\n    }\n  }, [availableShuffleChoice.length]); \n\n  return (\n    <>\n      <section className=\"header\">\n        <div className=\"details\">\n          <AlbumArt \n            image={image}\n            album={album}\n            artist={artist}\n          />\n          <Controls\n            isPlaying={isPlaying}\n            isShuffle={isShuffle}\n            onPrevClick={prevSong}\n            onNextClick={nextSong}\n            onPlayPauseClick={setIsPlaying}\n            onShuffleClick={handleShuffleClick}\n          />\n          <input\n            type=\"range\"\n            value={progress}\n            step=\"1\"\n            min=\"0\"\n            max={duration ? duration : `${duration}`}\n            className=\"progress\"\n            onChange={(e) => onScrub(e.target.value)}\n            onMouseUp={onScrubEnd}\n            onKeyUp={onScrubEnd}\n            style={{ background: progressBarLook }}\n          />\n        </div>\n      </section>\n      <section className=\"songList\">\n      {playlist.map((value, index) => \n        <ListedSong \n          data={value}\n          isCurrent={index===currentIndex}\n          onSongClick={() => handleSongClick(index)}\n          key={index} \n        />\n      )}\n      </section>\n    </>\n  );\n};\n\nexport default MusicPlayer;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport MusicPlayer from './components/MusicPlayer'\nimport playlist from './playlist'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const shuffleSetup = playlist.map((item, index) => index);\n  ReactDOM.render(<MusicPlayer \n    playlist={playlist} \n    allSongs = {shuffleSetup}\n  />, \n  document.querySelector('#app'))\n})\n","export default [\n  {\n    artist: 'Frank Ocean',\n    album: 'channel ORANGE',\n    track: 'Sweet Life',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/frank_ocean_sweet_life.mp3',\n    id: '7a187a2c-e6fe-46a6-a8d4-5b5984da3de3',\n    color: '#F3760F'\n  },\n  {\n    artist: 'Grace Jones',\n    album: 'Bulletproof Heart',\n    track: 'On My Way',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/grace_jones_on_my_way.mp3',\n    id: '9f6b44a3-0d57-4ae1-bfab-2447adf6eaf0',\n    color: '#4F64CF'\n  },\n  {\n    artist: 'ERROR TESTER',\n    album: 'image url is corrupt',\n    track: 'track url is corrupt',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/junior_boys_you_say_that.mp1',\n    id: '1c8d7409-59fb-4bf8-9ee6-8a32',\n    color: '#4D89A1'\n  },\n  {\n    artist: 'Junior Boys',\n    album: 'Big Black Coat',\n    track: 'You Say That',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/junior_boys_you_say_that.mp3',\n    id: '1c8d7409-59fb-4bf8-9ee6-8a328559754a',\n    color: '#4D89A1'\n  },\n  {\n    artist: 'Kate Bush',\n    album: 'Hounds of Love',\n    track: 'Running Up That Hill',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/kate_bush_running_up_that_hill.mp3',\n    id: 'a27f140e-082d-4004-9368-1c7bfd84e9d0',\n    color: '#F16971'\n  },\n  {\n    artist: 'King',\n    album: 'We Are King',\n    track: 'Supernatural',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/king_supernatural.mp3',\n    id: '0a78d3b2-7dc6-462b-8d8c-a5310ccb6451',\n    color: '#63A00F'\n  },\n  {\n    artist: 'Terry Riley',\n    album: 'Persian Surgery Dervishes',\n    track: 'Performance 1, part 1',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/terry_riley_persian_surgery_dervises_performance_1_part_1.mp3',\n    id: 'd7e10f3c-e967-43f8-babc-14ce537a2578',\n    color: '#3A95D3'\n  }\n]\n"]}